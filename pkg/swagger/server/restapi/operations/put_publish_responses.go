// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutPublishOKCode is the HTTP code returned for type PutPublishOK
const PutPublishOKCode int = 200

/*PutPublishOK Message is published.

swagger:response putPublishOK
*/
type PutPublishOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutPublishOK creates PutPublishOK with default headers values
func NewPutPublishOK() *PutPublishOK {

	return &PutPublishOK{}
}

// WithPayload adds the payload to the put publish o k response
func (o *PutPublishOK) WithPayload(payload string) *PutPublishOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put publish o k response
func (o *PutPublishOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPublishOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutPublishServiceUnavailableCode is the HTTP code returned for type PutPublishServiceUnavailable
const PutPublishServiceUnavailableCode int = 503

/*PutPublishServiceUnavailable Queue not available

swagger:response putPublishServiceUnavailable
*/
type PutPublishServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutPublishServiceUnavailable creates PutPublishServiceUnavailable with default headers values
func NewPutPublishServiceUnavailable() *PutPublishServiceUnavailable {

	return &PutPublishServiceUnavailable{}
}

// WithPayload adds the payload to the put publish service unavailable response
func (o *PutPublishServiceUnavailable) WithPayload(payload string) *PutPublishServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put publish service unavailable response
func (o *PutPublishServiceUnavailable) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPublishServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
